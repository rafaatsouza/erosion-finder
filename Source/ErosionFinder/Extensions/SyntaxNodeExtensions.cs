using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using System.Linq;

namespace ErosionFinder.Extensions
{
    internal static class SyntaxNodeExtensions
    {
        private const string AutoGeneratedCodeStartTrivia = "// <auto-generated>";

        public static bool TryFindTypeInParents<T>(
            this SyntaxNode node, out T element) where T : class
        {
            if (node is T castedElement)
            {
                element = castedElement;
                return true;
            }
            else if (node.Parent != null)
            {
                var found = TryFindTypeInParents<T>(node.Parent, 
                    out var foundElement);

                element = found ? foundElement : null;
                return found;
            }

            element = null;
            return false;
        }

        public static bool ContainsAutoGeneratedCode(
            this SyntaxNode node)
        {
            if (node == null)
                return false;

            var trivia = node.DescendantTokens()
                .SelectMany(t => t.LeadingTrivia)
                .Where(t => t != null 
                    && t.IsKind(SyntaxKind.SingleLineCommentTrivia));

            return trivia
                .Any(t => t.ToString().StartsWith(AutoGeneratedCodeStartTrivia));
        }
    }
}